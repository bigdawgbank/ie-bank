name: ie-bank-frontend

on:
  push:
    paths:
      - 'frontend/**'
    branches:
      - '*'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  FRONTEND_STATIC_WEBAPP_DEV: dkumlin-fe-dev
  FRONTEND_STATIC_WEBAPP_UAT: dkumlin-fe-uat
  NODE_VERSION: '18.x'
  APP_LOCATION: 'frontend'
  OUTPUT_LOCATION: 'dist'
  IMAGE_NAME: ie-bank-fe

jobs:
  # Docker Jobs
  docker-build-dev:
    runs-on: ubuntu-latest
    environment: Development
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set image version
        id: image-version
        run: echo "version=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT
      
      - name: Debug - Print Variables (Dev)
        run: |
          echo "NODE_ENV: ${{ vars.NODE_ENV }}"
          echo "VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}"
          echo "BASE_URL: ${{ vars.BASE_URL }}"
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ vars.DOCKER_REGISTRY_SERVER_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Build and push Docker image
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}
          BASE_URL: ${{ vars.BASE_URL }}
        run: |
          docker build ./frontend \
            --build-arg NODE_ENV=$NODE_ENV \
            --build-arg VUE_APP_ROOT_API=$VUE_APP_ROOT_API \
            --build-arg BASE_URL=$BASE_URL \
            -t ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }} \
            -t ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:latest

  docker-build-uat:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    environment: UAT
    outputs:
      image-version: ${{ steps.image-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Set image version
        id: image-version
        run: echo "version=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT
      
      - name: Debug - Print Variables (UAT)
        run: |
          echo "NODE_ENV: ${{ vars.NODE_ENV }}"
          echo "VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}"
          echo "BASE_URL: ${{ vars.BASE_URL }}"
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ vars.DOCKER_REGISTRY_SERVER_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: Build and push Docker image
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}
          BASE_URL: ${{ vars.BASE_URL }}
        run: |
          docker build ./frontend \
            --build-arg NODE_ENV=$NODE_ENV \
            --build-arg VUE_APP_ROOT_API=$VUE_APP_ROOT_API \
            --build-arg BASE_URL=$BASE_URL \
            -t ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }} \
            -t ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:${{ steps.image-version.outputs.version }}
          docker push ${{ vars.DOCKER_REGISTRY_SERVER_URL }}/${{ env.IMAGE_NAME }}:latest

  # Static Web App Jobs
  static-deploy-dev:
    runs-on: ubuntu-latest
    environment: Development
    needs: docker-build-dev
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build And Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: false
          production_branch: "main"
          app_build_command: 'npm run build -- --mode ${{ vars.NODE_ENV }}'
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}
          BASE_URL: ${{ vars.BASE_URL }}

  static-deploy-uat:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    environment: UAT
    needs: docker-build-uat
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build And Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_UAT }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: false
          production_branch: "main"
          app_build_command: 'npm run build -- --mode ${{ vars.NODE_ENV }}'
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}
          BASE_URL: ${{ vars.BASE_URL }}
