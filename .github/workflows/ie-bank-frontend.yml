name: ie-bank-frontend

on:
  push:
    paths:
      - "frontend/**"
    branches:
      - "*"
      - "!refs/pull/*" # Exclude PR branches to avoid duplicate runs
  pull_request:
    branches:
      - main
    paths:
      - "frontend/**"
  workflow_dispatch:

env:
  FRONTEND_STATIC_WEBAPP_DEV: dkumlin-fe-dev
  FRONTEND_STATIC_WEBAPP_UAT: dkumlin-fe-uat
  FRONTEND_STATIC_WEBAPP_PROD: dkumlin-fe-prod # Added for production
  NODE_VERSION: "18.x"
  APP_LOCATION: "frontend"
  OUTPUT_LOCATION: "dist"
  IMAGE_NAME: ie-bank-fe

jobs:
  # Development Environment
  build-deploy-dev:
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        working-directory: ${{ env.APP_LOCATION }}
        run: npm install

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Static Web App Deployment Token
        id: get-deployment-token
        run: |
          TOKEN=$(az staticwebapp secrets list --name ${{ env.FRONTEND_STATIC_WEBAPP_DEV }} --query "properties.apiKey" -o tsv)
          echo "AZURE_STATIC_WEB_APPS_API_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Build And Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: false
          production_branch: "main"
          app_build_command: "npm run build -- --mode ${{ vars.NODE_ENV }}"
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}

  # UAT Environment
  build-deploy-uat:
    # Run on PRs to main, pushes to main, or manual triggers
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: UAT
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        working-directory: ${{ env.APP_LOCATION }}
        run: npm install

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Static Web App Deployment Token
        id: get-deployment-token
        run: |
          TOKEN=$(az staticwebapp secrets list --name ${{ env.FRONTEND_STATIC_WEBAPP_UAT }} --query "properties.apiKey" -o tsv)
          echo "AZURE_STATIC_WEB_APPS_API_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Build And Deploy to Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: false
          production_branch: "main"
          app_build_command: "npm run build -- --mode ${{ vars.NODE_ENV }}"
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}

  # # Production Environment
  # build-deploy-prod:
  #   # Only run on pushes to main or manual triggers
  #   if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
  #   runs-on: ubuntu-latest
  #   needs: build-deploy-uat  # Requires UAT deployment to succeed
  #   environment: Production
  #   steps:
  #     - uses: actions/checkout@v3
  #
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #
  #     - name: Install Dependencies
  #       working-directory: ${{ env.APP_LOCATION }}
  #       run: npm install
  #
  #     - name: Azure Login
  #       uses: azure/login@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #
  #     - name: Get Static Web App Deployment Token
  #       id: get-deployment-token
  #       run: |
  #         TOKEN=$(az staticwebapp secrets list --name ${{ env.FRONTEND_STATIC_WEBAPP_PROD }} --query "properties.apiKey" -o tsv)
  #         echo "AZURE_STATIC_WEB_APPS_API_TOKEN=$TOKEN" >> $GITHUB_ENV
  #
  #     - name: Build And Deploy to Static Web App
  #       uses: Azure/static-web-apps-deploy@v1
  #       with:
  #         azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN }}
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         action: "upload"
  #         app_location: ${{ env.APP_LOCATION }}
  #         output_location: ${{ env.OUTPUT_LOCATION }}
  #         skip_app_build: false
  #         production_branch: "main"
  #         app_build_command: 'npm run build -- --mode ${{ vars.NODE_ENV }}'
  #       env:
  #         NODE_ENV: ${{ vars.NODE_ENV }}
  #         VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}

