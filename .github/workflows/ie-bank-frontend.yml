name: ie-bank-frontend

on:
  push:
    paths:
      - 'frontend/**'
    branches:
      - '*'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  FRONTEND_WEBAPP_DEV: dkumlin-fe-dev
  FRONTEND_WEBAPP_UAT: dkumlin-fe-uat
  # FRONTEND_WEBAPP_PROD: dkumlin-fe-prod
  NODE_VERSION: '18.x'

jobs:
  build-dev:
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Debug - Print Variables (Dev)
        run: |
          echo "NODE_ENV: ${{ vars.NODE_ENV }}"
          echo "VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}"
          echo "BASE_URL: ${{ vars.BASE_URL }}"
      
      - name: npm install and build (Dev)
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}
          BASE_URL: ${{ vars.BASE_URL }}
        run: |
          cd frontend
          npm ci
          npm run build -- --mode ${{ vars.NODE_ENV }}
      
      - name: Upload artifact (Dev)
        uses: actions/upload-artifact@v4
        with:
          name: node-app-dev
          path: frontend/dist/
          retention-days: 5

  build-uat:
    runs-on: ubuntu-latest
    environment: UAT
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Debug - Print Variables (UAT)
        run: |
          echo "NODE_ENV: ${{ vars.NODE_ENV }}"
          echo "VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}"
          echo "BASE_URL: ${{ vars.BASE_URL }}"
      
      - name: npm install and build (UAT)
        env:
          NODE_ENV: ${{ vars.NODE_ENV }}
          VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}
          BASE_URL: ${{ vars.BASE_URL }}
        run: |
          cd frontend
          npm ci
          npm run build -- --mode ${{ vars.NODE_ENV }}
      
      - name: Upload artifact (UAT)
        uses: actions/upload-artifact@v4
        with:
          name: node-app-uat
          path: frontend/dist/
          retention-days: 5

  # build-prod:
  #   runs-on: ubuntu-latest
  #   environment: Production
  #   if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'main'
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: 'npm'
  #         cache-dependency-path: frontend/package-lock.json
  #     
  #     - name: Debug - Print Variables (Prod)
  #       run: |
  #         echo "NODE_ENV: ${{ vars.NODE_ENV }}"
  #         echo "VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}"
  #         echo "BASE_URL: ${{ vars.BASE_URL }}"
  #     
  #     - name: npm install and build (Prod)
  #       env:
  #         NODE_ENV: ${{ vars.NODE_ENV }}
  #         VUE_APP_ROOT_API: ${{ vars.VUE_APP_ROOT_API }}
  #         BASE_URL: ${{ vars.BASE_URL }}
  #       run: |
  #         cd frontend
  #         npm ci
  #         npm run build -- --mode ${{ vars.NODE_ENV }}
  #     
  #     - name: Upload artifact (Prod)
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: node-app-prod
  #         path: frontend/dist/
  #         retention-days: 5

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-dev
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-dev
          path: .
      
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.FRONTEND_WEBAPP_DEV }}
          package: .

  deploy-uat:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    needs: build-uat
    environment:
      name: 'UAT'
      url: ${{ steps.deploy-to-webapp-uat.outputs.webapp-url }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-uat
          path: .
      
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp-uat
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.FRONTEND_WEBAPP_UAT }}
          package: .

  # deploy-prod:
  #   if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'main'
  #   runs-on: ubuntu-latest
  #   needs: [build-prod, deploy-uat]
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp-prod.outputs.webapp-url }}
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: node-app-prod
  #         path: .
  #     
  #     - uses: azure/login@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp-prod
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.FRONTEND_WEBAPP_PROD }}
  #         package: .
