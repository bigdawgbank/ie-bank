name: ie-bank-infra

on:
  workflow_dispatch: # This allows manual triggering
  push:
    branches:
      - "*" # This will run on any branch
      - "!refs/pull/*" # Exclude PR branches to avoid duplicate runs
    paths:
      - "infra/**"
      - "!infra/scripts/**"
  pull_request:
    branches:
      - main # This will run on pull requests to main
    paths:
      - "infra/**"
      - "!infra/scripts/**"

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-B-DEV
  RESOURCE_GROUP_UAT: BCSAI2024-DEVOPS-STUDENTS-B-UAT
  RESOURCE_GROUP_PROD: BCSAI2024-DEVOPS-STUDENTS-B-PROD
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  SUBSCRIPTION_ID_PROD: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: dkumlin


jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      infra: ${{ steps.filter.outputs.infra }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            infra:
              - 'infra/**'
              - '!infra/scripts/**'

  build:
    needs: check-changes
    if: needs.check-changes.outputs.infra == 'true'
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - uses: actions/checkout@v3
      - name: Run Bicep linter
        run: az bicep build --file ./infra/main.bicep

  
      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          file: infra/main.bicep
        continue-on-error: true

  validate_development_template: 
    needs: [build, check-changes] 
    runs-on: ubuntu-latest
    environment: Development 
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/arm-deploy@v1
      name: Validate Bicep file Development
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
        template: infra/main.bicep
        parameters: infra/parameters/dev.parameters.json
          branch=${{ github.ref_name }}
          repositoryUrl=https://github.com/bigdawgbank/ie-bank 
          appServiceAPIEnvVarENV=${{ vars.ENV }} 
          appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} 
          appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} 
          appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} 
          appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} 
          appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} 
          appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
          appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}

        deploymentMode: Validate


    - name: Detect Resource Drift
      run: |
        az deployment group what-if \
          --resource-group ${{ env.RESOURCE_GROUP_DEV }} \
          --template-file infra/main.bicep \
          --parameters infra/parameters/dev.parameters.json \
          branch=${{ github.ref_name }} \
          repositoryUrl=https://github.com/bigdawgbank/ie-bank \
          appServiceAPIEnvVarENV=${{ vars.ENV }} \
          appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} \
          appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} \
          appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} \
          appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} \
          appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} \
          appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }} \
          appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
  
  validate_uat_template: 
    needs: [build, check-changes] 
    runs-on: ubuntu-latest
    environment: UAT 
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/arm-deploy@v1
      name: Validate Bicep file UAT
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
        template: infra/main.bicep
        parameters: infra/parameters/uat.parameters.json
          branch=${{ github.ref_name }}
          repositoryUrl=https://github.com/bigdawgbank/ie-bank 
          appServiceAPIEnvVarENV=${{ vars.ENV }} 
          appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} 
          appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} 
          appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} 
          appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} 
          appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} 
          appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
          appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
        deploymentMode: Validate #Run flight test and do not really deploy 

    - name: Detect Resource Drift uat
      run: |
        az deployment group what-if \
          --resource-group ${{ env.RESOURCE_GROUP_UAT }} \
          --template-file infra/main.bicep \
          --parameters infra/parameters/uat.parameters.json \
          branch=${{ github.ref_name }} \
          repositoryUrl=https://github.com/bigdawgbank/ie-bank \
          appServiceAPIEnvVarENV=${{ vars.ENV }} \
          appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} \
          appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} \
          appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} \
          appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} \
          appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} \
          appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }} \
          appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
  
  validate_prod_template: 
    needs: [build, check-changes] 
    runs-on: ubuntu-latest
    environment: PROD 
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - uses: azure/arm-deploy@v1
      name: Validate Bicep file PROD
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
        template: infra/main.bicep
        parameters: infra/parameters/prod.parameters.json
          branch=${{ github.ref_name }}
          repositoryUrl=https://github.com/bigdawgbank/ie-bank 
          appServiceAPIEnvVarENV=${{ vars.ENV }} 
          appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} 
          appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} 
          appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} 
          appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} 
          appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} 
          appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
          appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
        deploymentMode: Validate #Run flight test and do not really deploy 

    - name: Detect Resource Drift prod
      run: |
        az deployment group what-if \
          --resource-group ${{ env.RESOURCE_GROUP_PROD }} \
          --template-file infra/main.bicep \
          --parameters infra/parameters/prod.parameters.json \
          branch=${{ github.ref_name }} \
          repositoryUrl=https://github.com/bigdawgbank/ie-bank \
          appServiceAPIEnvVarENV=${{ vars.ENV }} \
          appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} \
          appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} \
          appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} \
          appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} \
          appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} \
          appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }} \
          appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
  

  deploy-dev:
    needs: [validate_development_template, check-changes, build]
    if: needs.check-changes.outputs.infra == 'true'
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Debug
        run: |
          echo "ENV: ${{ vars.ENV }}"
          echo "DBHOST: ${{ vars.DBHOST }}"
          echo "DBNAME: ${{ vars.DBNAME }}"
          echo "FLASK_APP: ${{ vars.FLASK_APP }}"
          echo "FLASK_DEBUG: ${{ vars.FLASK_DEBUG }}"
      - name: Deploy to Development
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./infra/main.bicep
          parameters: >
            ./infra/parameters/dev.parameters.json 
            branch=${{ github.ref_name }}
            repositoryUrl=https://github.com/bigdawgbank/ie-bank 
            appServiceAPIEnvVarENV=${{ vars.ENV }} 
            appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} 
            appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} 
            appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} 
            appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} 
            appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} 
            appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
            appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          deploymentName: ${{ env.USER_ALIAS }}-dev

  deploy-uat:
    needs: [check-changes, build, validate_uat_template]
    if: |
      needs.check-changes.outputs.infra == 'true' && 
      (github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    environment: UAT
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Debug
        run: |
          echo "ENV: ${{ vars.ENV }}"
          echo "DBHOST: ${{ vars.DBHOST }}"
          echo "DBNAME: ${{ vars.DBNAME }}"
          echo "FLASK_APP: ${{ vars.FLASK_APP }}"
          echo "FLASK_DEBUG: ${{ vars.FLASK_DEBUG }}"
      - name: Deploy to UAT
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
          template: ./infra/main.bicep
          parameters: >
            ./infra/parameters/uat.parameters.json
            repositoryUrl=https://github.com/bigdawgbank/ie-bank 
            branch=${{ github.ref_name }} 
            appServiceAPIEnvVarENV=${{ vars.ENV}} 
            appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} 
            appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} 
            appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} 
            appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} 
            appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} 
            appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
            appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          deploymentName: ${{ env.USER_ALIAS }}-uat

  deploy-prod:
    # Only run when PR is merged to main or manual triggers
    runs-on: ubuntu-latest
    needs: [build, deploy-uat, validate_prod_template] # Requires UAT deployment to succeed
    if: (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    environment: PROD
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Debug
        run: |
          echo "ENV: ${{ vars.ENV }}"
          echo "DBHOST: ${{ vars.DBHOST }}"
          echo "DBNAME: ${{ vars.DBNAME }}"
          echo "FLASK_APP: ${{ vars.FLASK_APP }}"
          echo "FLASK_DEBUG: ${{ vars.FLASK_DEBUG }}"
      - name: Deploy to Production
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_PROD }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_PROD }}
          template: ./infra/main.bicep
          parameters: >
            ./infra/parameters/prod.parameters.json
            repositoryUrl=https://github.com/bigdawgbank/ie-bank
            branch=${{ github.ref_name }}
            appServiceAPIEnvVarENV=${{ vars.ENV}}
            appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }}
            appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }}
            appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }}
            appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }}
            appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }}
            appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
            appServiceAPIEnvVarJWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          deploymentName: ${{ env.USER_ALIAS }}-prod


    

        
